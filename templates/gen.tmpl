// Code generated by csvgen(BuildDate: {{.BuildDate}}, Version: {{.BuildVersion}}). DO NOT EDIT.
package {{.Pkg}}

import (
	"encoding/csv"
	"io"
	"strconv"
	"fmt"
)

{{- range .Structs}}
func Parse{{.StructName}}CSV(r io.Reader) ([]{{.StructName}}, error) {
	recs := make([]{{.StructName}}, 0)
	rdr := csv.NewReader(r)
	for {
		record, err := rdr.Read()
		if err != nil {
			if err == io.EOF {
				break
			}
			return nil, err
		}
		index := 0
		s := {{.StructName}}{}
		{{- range .Fields}}
			{{- if eq .Type "string"}}
				s.{{.Name}} = record[index]
			{{- end}}

			{{- if eq .Type "int32"}}
				{{.NameLower}}, err := parseInt32(record[index])
				if err != nil {
					return nil, fmt.Errorf("error while parsing field at index %d into int32", index)
				}

				s.{{.Name}} = {{.NameLower}}
			{{- end}}

			{{- if eq .Type "int64"}}
				{{.NameLower}}, err := parseInt64(record[index])
				if err != nil {
					return nil, fmt.Errorf("error while parsing field at index %d into int64", index)
				}

				s.{{.Name}} = {{.NameLower}}
			{{- end}}

			{{- if eq .Type "float32"}}
				{{.NameLower}}, err := parseFloat32(record[index])

				if err != nil {
					return nil, fmt.Errorf("error while parsing field at index %d into float32", index)
				}

				s.{{.Name}} = float32({{.NameLower}})
			{{- end}}

			{{- if eq .Type "float64"}}
				{{.NameLower}}, err := parseFloat64(record[index])

				if err != nil {
					return nil, fmt.Errorf("error while parsing field at index %d into float64", index)
				}

				s.{{.Name}} = {{.NameLower}}
			{{- end}}
			index+=1
		{{- end}}

		recs = append(recs, s)
	}

	return recs, nil
}
{{- end}}

func parseInt32(s string) (int32, error) {
	if s == "" {
		return 0, nil
	}
	i, err := strconv.ParseInt(s, 0, 32)
	return int32(i), err
}

func parseInt64(s string) (int64, error) {
	if s == "" {
		return 0, nil
	}
	return strconv.ParseInt(s, 0, 64)
}

func parseFloat32(s string) (float32, error) {
	if s == "" {
		return 0, nil
	}
	i, err := strconv.ParseFloat(s, 32)
	return float32(i), err
}

func parseFloat64(s string) (float64, error) {
	if s == "" {
		return 0, nil
	}
	return strconv.ParseFloat(s, 64)
}